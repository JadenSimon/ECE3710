.menu_loop
      // this checks if the 'A' button is pressed then jumps to .game_setup if so, loops back if not
      MOVI REG0 0000111100000111
      MOVI REG1 00000000
      STOR REG1 REG0
      MOVI REG3 0000000010000000
      LCI REG0 player1
      LCI REG1 player2
      AND REG1 REG3
      AND REG0 REG3
      MOVI REG4 .game_setup
      CMPI REG0 00000000
      JCND EQ REG4
      CMPI REG1 00000000
      JCND EQ REG4
      MOVI REG4 .menu_loop
      JCND NC REG4
.game_setup
      // set the initial tank location for player 1
      MOVI REG0 0000111100001111
      MOVI REG1 0000111100001110
      MOVI REG2 0000000001000000
      MOVI REG3 0000000001000000
      STOR REG2 REG0
      STOR REG3 REG1
      // set the initial tank location for player 2
      MOVI REG0 0000111100001101
      MOVI REG1 0000111100001100
      MOVI REG2 0000001000111111
      MOVI REG3 0000000110011111
      STOR REG2 REG0
      STOR REG3 REG1
      // set the initial tank health for player 1
      MOVI REG0 0000111001110100
      MOVI REG1 00000011
      STOR REG1 REG0
      // set the initial tank health for player 2
      MOVI REG0 0000111001110011
      MOVI REG1 00000011
      STOR REG1 REG0
      // set the initial orientation for player 1
      MOVI REG0 0000111001110010
      MOVI REG1 00000001
      STOR REG1 REG0
      // set the initial orientation for player 2
      MOVI REG0 0000111001110001
      MOVI REG1 00000001
      STOR REG1 REG0
      // set the game state to one to tell the vga to draw the map
      MOVI REG0 0000111100000111
      MOVI REG1 00000001
      STOR REG1 REG0
      MOVI REG4 .game_loop_player1
      JCND NC REG4
.game_loop_player1
      // move the address of the player1 loc to saved register to inform the update_loc* subroutines
      MOVI REG6 0000111100001111
      MOVI REG7 0000111100001110
      // load snes input
      LCI REG0 player1
      MOV REG2 REG0
      // if its a move UP: jump to update_tank_location_up
      MOVI REG1 0000100000000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_up_player1
      CMP REG2 REG1
      JCND EQ REG3
      // if its a move DOWN: jump to update_tank_location_down
      MOV REG2 REG0
      MOVI REG1 0000010000000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_down_player1
      CMP REG2 REG1
      JCND EQ REG3
      // if its a move LEFT: jump to update_tank_location_left
      MOV REG2 REG0
      MOVI REG1 0000001000000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_left_player1
      CMP REG2 REG1
      JCND EQ REG3
      // if its a move RIGHT: jump to update_tank_location_right
      MOV REG2 REG0
      MOVI REG1 0000000100000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_right_player1
      CMP REG2 REG1
      JCND EQ REG3
.check_shoot_player1
      // if its a shoot: jump to spawn_projectile
      MOV REG2 REG0
      MOVI REG1 0000000010000000
      AND REG2 REG1
      MOVI REG3 .spawn_projectile_player1
      CMP REG2 REG1
      JCND EQ REG3
.game_loop_player2
      // move the address of the player2 loc to saved register
      MOVI REG8 0000111100001101
      MOVI REG9 0000111100001100
      // load snes input
      LCI REG0 player2
      MOV REG2 REG0
      // if its a move UP: jump to update_tank_location_up
      MOVI REG1 0000100000000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_up_player2
      CMP REG2 REG1
      JCND EQ REG3
      // if its a move DOWN: jump to update_tank_location_down
      MOV REG2 REG0
      MOVI REG1 0000010000000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_down_player2
      CMP REG2 REG1
      JCND EQ REG3
      // if its a move LEFT: jump to update_tank_location_left
      MOV REG2 REG0
      MOVI REG1 0000001000000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_left_player2
      CMP REG2 REG1
      JCND EQ REG3
      // if its a move RIGHT: jump to update_tank_location_right
      MOV REG2 REG0
      MOVI REG1 0000000100000000
      AND REG2 REG1
      MOVI REG3 .update_tank_location_right_player2
      CMP REG2 REG1
      JCND EQ REG3
.check_shoot_player2
      // if its a shoot: jump to spawn_projectile
      MOV REG2 REG0
      MOVI REG1 0000000010000000
      AND REG2 REG1
      MOVI REG3 .spawn_projectile_player2
      CMP REG2 REG1
      JCND EQ REG3
.update_projectiles_player1

.update_projectiles_player2

.update_tank_location_right_player1

.update_tank_location_left_player1

.update_tank_location_up_player1

.update_tank_location_down_player1

.update_tank_location_right_player2

.update_tank_location_left_player2

.update_tank_location_up_player2

.update_tank_location_down_player2

.spawn_projectile_player1

.spawn_projectile_player2
